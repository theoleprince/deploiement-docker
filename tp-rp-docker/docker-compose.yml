# version: "3.4"

# services:
#   snake-zek:
#     container_name: snake-zek
#     build:
#       context: ./Snake-Zek
#       dockerfile: Dockerfile
#     restart: unless-stopped
#     volumes:
#        - "./nginx/dev:/etc/nginx/conf.d"
#     ports:
#       - "8082:80"

#   tp1:
#     container_name: tp1
#     build:
#       context: ./tp1
#       dockerfile: Dockerfile
#     restart: unless-stopped
#     depends_on:
#      - mysql_db 
#     volumes:
#       - ./tp1:/usr/src/app/src
#     ports:
#       - "8085:8080"

#   mysql_db:
#     image: "mysql:5.6"
#     restart: always
#     ports:
#       - 3306:3306
#     environment:
#       MYSQL_DATABASE: tp1_db
#       MYSQL_PASSWORD: root
#       MYSQL_ROOT_PASSWORD: Root123456*

version: "3.4"

services:
  reverse_proxy:
        restart: always
        image: nginx:alpine
        container_name: reverse_proxy
        volumes:
            - "./reverse_proxy/nginx.conf:/etc/nginx/conf.d/default.conf"
        ports:
          - "80:80"
        networks:
         - tp_rp_docker_network
  
  snake:
    container_name: snake
    build:
      context: ./Snake-Zek
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - reverse_proxy
    networks:
         - tp_rp_docker_network

  tp1:
    container_name: tp1
    build:
      context: ./tp1
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      [mysql_db, reverse_proxy]
    networks:
         - tp_rp_docker_network

  mysql_db:
    image: "mysql:5.6"
    restart: always
    environment:
      MYSQL_DATABASE: tp1_db
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: Root123456*
      MYSQL_TCP_PORT: 3307
    ports:
    - 3307:3307
    expose:
      - 3307
    networks:
         - tp_rp_docker_network
networks:
    tp_rp_docker_network:
      driver: bridge
